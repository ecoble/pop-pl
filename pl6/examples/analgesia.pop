#lang racket
(require "../runtime.rkt")

(import stop give)

(define/state analgesic-type
  'initial 'later 'non-nsaid 'off)
(define/external npo?
  'npo 'po)

(define/hander (discontinue old new evt)
  (list
   (stop "stuff")
   (remove-handler discontinue)))

(define/hander (initial old new evt)
  (define (m? state)
    (match? (state (analgesic-type 'initial) _ ...)
            state))
  (if (not
       (and
        (not (m? old))
        (m? new)))
      null
      (list (give "some-drug")
            (new-handler initial2
             (let ([t (+ (current-time new) (? 6 hours))])
               (lambda (old new _)
                 (if (not
                      (and (before? old t)
                           (after? new t)))
                     null
                     (list (update analgesic-type 'later)
                           (remove-handler initial2)))))))))

(define/handler (later/transitions old new evt)
  (define (m? state)
    (match? (state (analgesic-type 'later)
                   _ ...)
            state))
  (if (not (and (not (m? old))
                (m? new)))
      null
      (list
       (new-handler after2
        (let ([t (+ (current-time new) (3 days))])
          (lambda (old new _)
            (if (not 
                 (and (before? old t)
                      (after? new t))
                 null
                 (list
                  (update analgesic-type 'non-nsaid)
                  (remove-handler after2))))))))))

(define/hander (later+npo/whenevers _ st event)
  (define/state last-time time? -> 0)
  (define drug "something1")
  (define state
    (match event
      [(given (eq drug))
       (list (update last-time (current-time st)))]
      [_ null]))
  (define messages
    (match st
      [(state
        (npo? 'npo)
        (analgesic-type 'later)
        (last-time (? t (lambda (_) (after? state (+ last-time (4 hours))))))
        _ ...)
       (list (give drug))]
      [_ null]))
  (append state messages))

(define/hander (later+po/whenevers _ st event)
  (define/state last-time time? -> 0)
  (define drug "something2")
  (define state
    (match event
      [(given (eq drug)) 
       (list (update last-time (current-time st)))]
      [_ null]))
  (define messages 
    (match st 
      [(state
        (npo? 'po)
        (analgesic-type 'later)
        (last-time (? t (lambda (_) (after? state (+ last-time (4 hours))))))
        _ ...)
       (list (give drug))]
      [_ null]))
  (append state messages))

(define/handler (non-nsaid _ st event)
  (define/state last-time time? -> 0)
  (define drug "something3")
  (define state
    (match event
      [(given (eq drug)) 
       (list (update last-time (current-time st)))]
      [_ null]))
  (define messages
    (match st
      [(state
        (npo? 'po)
        (analgesic-type 'later)
        (last-time (? t (lambda (_) (after? state (+ last-time (4 hours))))))
        _ ...)
       (list (give drug))]
      [_ null]))
  (append state messages))
